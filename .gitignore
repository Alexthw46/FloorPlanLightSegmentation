# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
.idea
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintainted in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
/images/
/result-300/0.png
/result-300/1.png
/result-300/2.png
/result-300/3.png
/result-300/4.png
/result-300/5.png
/result-300/6.png
/result-300/7.png
/result-300/8.png
/result-300/9.png
/result-300/10.png
/result-300/11.png
/result-300/12.png
/result-300/13.png
/result-300/14.png
/result-300/15.png
/result-300/16.png
/result-300/17.png
/result-300/18.png
/result-300/19.png
/result-300/20.png
/result-300/21.png
/result-300/22.png
/result-300/23.png
/result-300/24.png
/result-300/25.png
/result-300/26.png
/result-300/27.png
/result-300/28.png
/result-300/29.png
/result-300/30.png
/result-300/31.png
/result-300/32.png
/result-300/33.png
/result-300/34.png
/result-300/35.png
/result-300/36.png
/result-300/37.png
/result-300/38.png
/result-300/39.png
/result-300/40.png
/result-300/41.png
/result-300/42.png
/result-300/43.png
/result-300/44.png
/result-300/45.png
/result-300/46.png
/result-300/47.png
/result-300/48.png
/result-300/49.png
/result-300/50.png
/result-300/51.png
/result-300/52.png
/result-300/53.png
/result-300/54.png
/result-300/55.png
/result-300/56.png
/result-300/57.png
/result-300/58.png
/result-300/59.png
/tlogs/tensorboard/train/1/events.out.tfevents.1677845101.e0a68ef2b9f9.12.0.v2
/tlogs/tensorboard/validation/events.out.tfevents.1677845129.e0a68ef2b9f9.12.1.v2
/tlogs/tensorboard/train/2/events.out.tfevents.1677848135.6b8c4b816768.11.0.v2
/tlogs/tensorboard/validation/events.out.tfevents.1677848163.6b8c4b816768.11.1.v2
/tlogs/tensorboard/train/3/train/events.out.tfevents.1677849251.ddd1b15fed11.11.0.v2
/tlogs/tensorboard/train/3/validation/events.out.tfevents.1677849276.ddd1b15fed11.11.1.v2
/tlogs/tensorboard/validation/events.out.tfevents.1677849276.ddd1b15fed11.11.1.v2
/tlogs/tensorboard/train/4/events.out.tfevents.1677850949.fdc432e1a468.11.0.v2
/tlogs/tensorboard/validation/events.out.tfevents.1677850979.fdc432e1a468.11.1.v2
/tlogs/tensorboard/train/5/events.out.tfevents.1677851541.fdc432e1a468.24632.0.v2
/tlogs/tensorboard/validation/events.out.tfevents.1677851567.fdc432e1a468.24632.1.v2
/segmentation.h5
/tensorboard-ete/train/events.out.tfevents.1678265070.8d6a67031c80.1.0.v2
/tensorboard-ete/validation/events.out.tfevents.1678265117.8d6a67031c80.1.1.v2
/tensorboard/train/events.out.tfevents.1678269066.PC-ALE.11660.0.v2
/tensorboard/train/events.out.tfevents.1678269281.PC-ALE.15916.0.v2
/tensorboard/train/events.out.tfevents.1678269308.PC-ALE.14440.0.v2
/tensorboard/train/events.out.tfevents.1678269421.PC-ALE.3520.0.v2
/tensorboard/train/events.out.tfevents.1678269692.PC-ALE.14584.0.v2
/tensorboard/train/events.out.tfevents.1678270768.PC-ALE.15680.0.v2
/tensorboard/train/events.out.tfevents.1678271100.PC-ALE.13740.0.v2
/tensorboard/train/events.out.tfevents.1678271494.PC-ALE.10680.0.v2
/tensorboard/train/events.out.tfevents.1678271545.PC-ALE.10200.0.v2
/tensorboard/train/events.out.tfevents.1678271597.PC-ALE.9816.0.v2
/tensorboard/train/events.out.tfevents.1678271627.PC-ALE.16768.0.v2
/tensorboard/train/events.out.tfevents.1678274771.PC-ALE.3076.0.v2
/tensorboard/train/events.out.tfevents.1678274805.PC-ALE.15944.0.v2
/tensorboard/train/events.out.tfevents.1678275138.PC-ALE.2456.0.v2
/tensorboard/train/events.out.tfevents.1678358903.PC-ALE.14228.0.v2
/tensorboard/train/events.out.tfevents.1678359918.PC-ALE.12920.0.v2
/model_plot.png
/model_plot_notop.png
